openapi: 3.0.0
info:
  title: Simple Twitter API
  description: >-
    This is a sample server for Simple Twitter API.  You can find out more about
    this project at [our GitHub](https://github.com/ivyhungtw/twitter-api-2020).
    For this sample, you should use JWT token to test the authorization filters.
  contact:
    name: GitHub
    url: 'https://github.com/ivyhungtw/twitter-api-2020/'
  version: 1.0.0
externalDocs:
  url: 'https://hackmd.io/@icaughtacode/rJmFeRSUu'
  description: Find more info here
servers:
  - url: 'http://localhost:3000/api'
    description: Development server
  - url: 'https://simple-twitter-api-2021.herokuapp.com/api'
    description: Production server
tags:
  - name: admin
    description: Admin related
  - name: user
    description: User related
  - name: tweets
    description: Tweets related
  - name: followships
    description: Followships related
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Users:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
        avatar:
          type: string
        role:
          type: string
          default: user
        introduction:
          type: string
        account:
          type: string
        cover:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
      xml:
        name: Users
    Tweets:
      type: object
      properties:
        id:
          type: integer
        UserId:
          type: integer
        description:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
      xml:
        name: Category
    Replies:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        tweetId:
          type: integer
        comment:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
      xml:
        name: Replies
    Likes:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        tweetId:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
      xml:
        name: Likes
    Followships:
      type: object
      properties:
        id:
          type: integer
        followerId:
          type: integer
        followingId:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
      xml:
        name: Followships
    Subscriptions:
      type: object
      properties:
        id:
          type: integer
        subscriberId:
          type: integer
        authorId:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
      xml:
        name: Subscriptions
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
security:
  - bearerAuth: []
paths:
  /admin/users:
    get:
      tags:
        - admin
      summary: Get all user data
      description: >-
        Admin can get all user data from Simple Twitter and their social
        activeness data.
      operationId: getAdminUsers
      responses:
        '200':
          description: Ok. Retrieved an array of user objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
              examples:
                success:
                  value: |-
                    [
                        {
                            "id": 2,
                            "name": "user1",
                            "avatar": "https://i.imgur.com/q6bwDGO.png",
                            "account": "user1",
                            "isFollowed": true
                        },
                        {
                            "id": 3,
                            "name": "user2",
                            "avatar": "https://i.imgur.com/q6bwDGO.png",
                            "account": "user2",
                            "isFollowed": true
                        },
                        {
                            "id": 3,
                            "name": "user2",
                            "avatar": "https://i.imgur.com/q6bwDGO.png",
                            "account": "user2",
                            "isFollowed": true
                        }
                    ]
        '400':
          description: Bad request.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/admin/users/{id}':
    delete:
      tags:
        - admin
      summary: Deletes a user
      description: >-
        Admin can delete a user by specifying the userId in the request
        parameter.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the user you want to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
              examples:
                success:
                  value: |-
                    { 
                      "status": "success", 
                      "message": "delete successfully" 
                    }
        '400':
          description: Bad request
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /tweets:
    get:
      tags:
        - tweets
      summary: Get all tweets data.
      description: User can retrieve a list of all posted tweets.
      operationId: getTweets
      responses:
        '200':
          description: Ok. Retrieved an array of tweet objects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweets'
              examples:
                success:
                  value: |-
                    [
                      {
                          "id": 1,
                          "UserId": 1,
                          "description": "Ipsa quaerat modi alias vel eos odit qui ut et. Vel dolor doloribus iure deleniti veritatis ut. Aut quam odio reprehenderit. Et reprehenderit temporibus",
                          "createdAt": "2021-04-19T16:45:10.000Z",
                          "updatedAt": "2021-04-19T16:45:10.000Z",
                          "replyCount": 3,
                          "likeCount": 1,
                          "isLiked": true,
                          "user": {
                              "avatar": "https://i.imgur.com/q6bwDGO.png",
                              "name": "root",
                              "account": "root"
                          }
                      },
                      {
                          "id": 2,
                          "UserId": 1,
                          "description": "officiis et cum",
                          "createdAt": "2021-04-19T16:45:10.000Z",
                          "updatedAt": "2021-04-19T16:45:10.000Z",
                          "replyCount": 3,
                          "likeCount": 1,
                          "isLiked": true,
                          "user": {
                              "avatar": "https://i.imgur.com/q6bwDGO.png",
                              "name": "root",
                              "account": "root"
                          }
                      },
                      {
                          "id": 3,
                          "UserId": 1,
                          "description": "Fugiat quam animi earum quibusdam hic fugiat beatae quo.\nReiciendis rerum delectus repellat harum repudiandae quasi reprehenderit saepe in.\nPraesentium cumque autem atque nisi minus nihil cupiditate.\nUt consectetur omnis architecto provident aspernatur sequi aliquid atque rerum.\nVelit pariatur nam.",
                          "createdAt": "2021-04-19T16:45:10.000Z",
                          "updatedAt": "2021-04-19T16:45:10.000Z",
                          "replyCount": 3,
                          "likeCount": 0,
                          "isLiked": false,
                          "user": {
                              "avatar": "https://i.imgur.com/q6bwDGO.png",
                              "name": "root",
                              "account": "root"
                          }
                      }
                    ]
        '400':
          description: Bad request.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - tweets
      summary: Post a tweet.
      description: User can post a tweet.
      operationId: postTweets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UserId:
                  type: integer
                  example: 1
                description:
                  type: string
                  example:  "Ipsa quaerat modi alias vel eos odit qui ut et. Vel dolor doloribus iure deleniti veritatis ut. Aut quam odio reprehenderit. Et reprehenderit temporibus. Excepturi expedita blanditiis fugiat. Ratione debitis mollitia explicabo nam omnis.\n \rDicta officiis"
      responses:
        '200':
          description: Ok. Successfully posted a tweet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tweets'
              examples:
                success:
                  value: |-
                    { 
                      "status": "success", 
                      "message": "delete successfully",
                      "tweet": {
                        "id": 3,
                        "UserId": 1,
                        "description": "Fugiat quam animi earum quibusdam hic fugiat beatae quo.\nReiciendis rerum delectus repellat harum repudiandae quasi reprehenderit saepe in.\nPraesentium cumque autem atque nisi minus nihil cupiditate.\nUt consectetur omnis architecto provident aspernatur sequi aliquid atque rerum.\nVelit pariatur nam.",
                        "createdAt": "2021-04-19T16:45:10.000Z",
                        "updatedAt": "2021-04-19T16:45:10.000Z",
                        "replyCount": 3,
                        "likeCount": 0,
                        "isLiked": false,
                        "user": {
                          "avatar": "https://i.imgur.com/q6bwDGO.png",
                          "name": "root",
                          "account": "root"
                        }
                      }
                    }
        '400':
          description: Bad request.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
