const bcrypt = require('bcryptjs')
const { User } = require('../models')
const helpers = require('../_helpers')

const jwt = require('jsonwebtoken')
const passportJWT = require('passport-jwt')
const ExtractJwt = passportJWT.ExtractJwt
const JwtStrategy = passportJWT.Strategy


const userController = {
  signIn: async (req, res, next) => {
    try {
      const { account, password } = req.body
      const userData = req.user.TOJSON()
      // delete userData.password

      // 簽發JWT token, 效期為30天
      const token = jwt.sign(userData, process.env.JWT_SECRET, { expiresIn: '30d' }) 

      if (!account || !password) {
        return res.status(401).json({
        status: 'error',
        message: 'All fields are required!'
      })
    }
    const user = await User.findOne({ where: { account } })
    if  (!user) return res.status(401).json({
      status: 'error',
      message: "This user doesn't exist!"
    })
    if (!bcrypt.compareSync(password, user.password)) {
      return res.status(401).json({
        status: 'error',
        message: 'Password incorrect.'
      })
    }


    }
  }
}

module.exports = userController