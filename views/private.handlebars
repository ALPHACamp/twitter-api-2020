<!DOCTYPE html>
<html>

<head>
  <title>Socket.IO chat</title>
  <style>
    body {
      margin: 0;
      padding-bottom: 3rem;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    }

    #form {
      background: rgba(0, 0, 0, 0.15);
      padding: 0.25rem;
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      display: flex;
      height: 3rem;
      box-sizing: border-box;
      backdrop-filter: blur(10px);
    }

    #input {
      border: none;
      padding: 0 1rem;
      flex-grow: 1;
      border-radius: 2rem;
      margin: 0.25rem;
    }

    #input:focus {
      outline: none;
    }

    #form>button {
      background: #333;
      border: none;
      padding: 0 1rem;
      margin: 0.25rem;
      border-radius: 3px;
      outline: none;
      color: #fff;
    }

    #messages {
      list-style-type: none;
      margin: 0;
      padding: 0;
    }

    #messages>li {
      padding: 0.5rem 1rem;
    }

    #messages>li:nth-child(odd) {
      background: #efefef;
    }
  </style>
</head>

<body>
  <ul>
    <li>
      Alicia
    </li>
    <li>
      Bob
    </li>
  </ul>
  <ul id="messages"></ul>
  <form id="form" action="">
    <input id="input" name="message" autocomplete="off" /><button>Send</button>
  </form>
</body>

</html>

<script src="/socket.io/socket.io.js"></script>
<script>
  const { token } = sessionStorage
  const private = io.connect('/private', { auth: { token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTEsImlhdCI6MTYzMjA0MjkzMn0.XOU_z7FEclIKLU8hLwrhZfm-7yRzNmNtpZKg0dDF2jM' } })
  const messages = document.getElementById('messages');
  const form = document.getElementById('form');
  const input = document.getElementById('input');


  form.addEventListener('submit', function (e) {
    e.preventDefault();
    if (input.value) {
      private.emit('send message', { message: input.value });
      input.value = '';
    }
  });

  private.emit('private connect', '11')

  private.on('updated message', (obj) => {
    console.log(JSON.stringify(obj))
    displayMessage(obj.message)
    window.scrollTo(0, document.body.scrollHeight);
  });


  private.on('private history', msg => {
    console.log(msg)
  })


  function displayMessage(msg) {
    const item = document.createElement('li');
    item.innerHTML = msg
    messages.appendChild(item)
  }
</script>